{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "# FB Prohpet Modelling "
      ],
      "metadata": {
        "id": "pTNYhZa6S7Kn"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install prophet\n",
        "\n",
        "import prophet\n",
        "from prophet.plot import plot_plotly, plot_components_plotly\n",
        "from prophet import Prophet"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "05Yg0wflS-6-",
        "outputId": "c13f0d82-efaf-417d-e174-97d29a4824a0"
      },
      "execution_count": 238,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Requirement already satisfied: prophet in /usr/local/lib/python3.8/dist-packages (1.1.1)\n",
            "Requirement already satisfied: setuptools-git>=1.2 in /usr/local/lib/python3.8/dist-packages (from prophet) (1.2)\n",
            "Requirement already satisfied: python-dateutil>=2.8.0 in /usr/local/lib/python3.8/dist-packages (from prophet) (2.8.2)\n",
            "Requirement already satisfied: wheel>=0.37.0 in /usr/local/lib/python3.8/dist-packages (from prophet) (0.38.4)\n",
            "Requirement already satisfied: matplotlib>=2.0.0 in /usr/local/lib/python3.8/dist-packages (from prophet) (3.2.2)\n",
            "Requirement already satisfied: LunarCalendar>=0.0.9 in /usr/local/lib/python3.8/dist-packages (from prophet) (0.0.9)\n",
            "Requirement already satisfied: numpy>=1.15.4 in /usr/local/lib/python3.8/dist-packages (from prophet) (1.21.6)\n",
            "Requirement already satisfied: pandas>=1.0.4 in /usr/local/lib/python3.8/dist-packages (from prophet) (1.3.5)\n",
            "Requirement already satisfied: holidays>=0.14.2 in /usr/local/lib/python3.8/dist-packages (from prophet) (0.17)\n",
            "Requirement already satisfied: tqdm>=4.36.1 in /usr/local/lib/python3.8/dist-packages (from prophet) (4.64.1)\n",
            "Requirement already satisfied: setuptools>=42 in /usr/local/lib/python3.8/dist-packages (from prophet) (57.4.0)\n",
            "Requirement already satisfied: cmdstanpy>=1.0.4 in /usr/local/lib/python3.8/dist-packages (from prophet) (1.0.8)\n",
            "Requirement already satisfied: convertdate>=2.1.2 in /usr/local/lib/python3.8/dist-packages (from prophet) (2.4.0)\n",
            "Requirement already satisfied: pymeeus<=1,>=0.3.13 in /usr/local/lib/python3.8/dist-packages (from convertdate>=2.1.2->prophet) (0.5.11)\n",
            "Requirement already satisfied: korean-lunar-calendar in /usr/local/lib/python3.8/dist-packages (from holidays>=0.14.2->prophet) (0.3.1)\n",
            "Requirement already satisfied: hijri-converter in /usr/local/lib/python3.8/dist-packages (from holidays>=0.14.2->prophet) (2.2.4)\n",
            "Requirement already satisfied: ephem>=3.7.5.3 in /usr/local/lib/python3.8/dist-packages (from LunarCalendar>=0.0.9->prophet) (4.1.3)\n",
            "Requirement already satisfied: pytz in /usr/local/lib/python3.8/dist-packages (from LunarCalendar>=0.0.9->prophet) (2022.6)\n",
            "Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.8/dist-packages (from matplotlib>=2.0.0->prophet) (3.0.9)\n",
            "Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.8/dist-packages (from matplotlib>=2.0.0->prophet) (0.11.0)\n",
            "Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.8/dist-packages (from matplotlib>=2.0.0->prophet) (1.4.4)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.8/dist-packages (from python-dateutil>=2.8.0->prophet) (1.15.0)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "\n",
        "from statsmodels.tools.eval_measures import rmse\n",
        "\n",
        "from sklearn.model_selection import train_test_split"
      ],
      "metadata": {
        "id": "0mPUIiD0S9jB"
      },
      "execution_count": 239,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install fancyimpute -q\n",
        "from fancyimpute import IterativeImputer"
      ],
      "metadata": {
        "id": "UBpETiHfVrht"
      },
      "execution_count": 240,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Load in Data and Prepare for Modelling"
      ],
      "metadata": {
        "id": "uwB2fxJITMvG"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "apples = pd.read_csv('https://raw.githubusercontent.com/mckenzie-maidl/data5100-climate-agriculture/main/Cleaned%20Data/WA_apples_1889_2021.csv')\n",
        "prism = pd.read_csv('https://raw.githubusercontent.com/mckenzie-maidl/data5100-climate-agriculture/main/Cleaned%20Data/prism.csv')"
      ],
      "metadata": {
        "id": "mOB0dubOTBQO"
      },
      "execution_count": 241,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#clean and prepare weather data from prism\n",
        "prism.drop(columns='Unnamed: 0', inplace=True)\n",
        "\n",
        "#rename columns\n",
        "cols = list(prism.columns)\n",
        "new = ['ppt', 'tmin', 'tmean', 'tmax', 'tdewmean', 'vpdmin', 'vpdmax', 'county', 'year', 'month']\n",
        "new_cols = dict(zip(cols,new))\n",
        "prism.rename(columns=new_cols, inplace=True)\n",
        "\n",
        "#add in vpddiff and temp diff and vpdmean\n",
        "prism['vpddiff'] = prism['vpdmax'] - prism['vpdmin']\n",
        "prism['tdiff'] = prism['tmax'] - prism['tmin']\n",
        "prism['vpdmean'] = (prism['vpdmax'] + prism['vpdmin']) / 2"
      ],
      "metadata": {
        "id": "jMANTMYSTR6g"
      },
      "execution_count": 242,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#clean and prep apple data\n",
        "apples2 = apples.dropna().sort_values(by='year').set_index('year')\n",
        "apples2.drop(columns='Unnamed: 0', inplace=True)"
      ],
      "metadata": {
        "id": "JT6GWcCwTtKk"
      },
      "execution_count": 243,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#group by year and make datetime\n",
        "prism2 = prism.copy()\n",
        "\n",
        "#groupby, mean for everything except precip and reset index\n",
        "prism2 = prism.groupby('year').mean().drop(columns='month')\n",
        "prism2['ppt'] = prism.groupby('year')['ppt'].sum()\n",
        "\n",
        "#join with apples2\n",
        "prism2 = prism2.loc[1919:].join(apples2['yield_acre_lbs'])\n",
        "prism2.reset_index(inplace=True)\n",
        "\n",
        "#make year into datetime and drop original year\n",
        "prism2['date'] = prism2['year'].apply(str) + '-' + '01'\n",
        "prism2['date'] = pd.to_datetime(prism2['date'])\n",
        "prism2.drop(columns='year', inplace=True)"
      ],
      "metadata": {
        "id": "PmfN8aqTTwCm"
      },
      "execution_count": 244,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Model"
      ],
      "metadata": {
        "id": "coN5rB5vWX_c"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Calculate Yield Per Tree"
      ],
      "metadata": {
        "id": "2L2wIMPDxuYv"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "apple_farms = pd.read_csv('https://raw.githubusercontent.com/mckenzie-maidl/data5100-climate-agriculture/main/Cleaned%20Data/apples_1970.csv')"
      ],
      "metadata": {
        "id": "RKJMIvBTxzxd"
      },
      "execution_count": 245,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#drop unnamed and add yield per tree\n",
        "apple_farms.drop(columns='Unnamed: 0', inplace=True)\n",
        "apple_farms['yield_tree'] = apple_farms['yield_acre_lbs']/apple_farms['trees_per_acre']\n",
        "#take past 50 years\n",
        "apple_farms = apple_farms.sort_values(by='year').set_index('year').loc[1972:]"
      ],
      "metadata": {
        "id": "Uw7p6DnFxz0D"
      },
      "execution_count": 246,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(0)\n",
        "\n",
        "plt.scatter(apple_farms.index , apple_farms['yield_tree'])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 283
        },
        "id": "1X-8xiKvxz5G",
        "outputId": "9aff3557-3bd5-4105-a89a-ff136eed694c"
      },
      "execution_count": 247,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.collections.PathCollection at 0x7fd18cbff160>"
            ]
          },
          "metadata": {},
          "execution_count": 247
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#make copy of prism\n",
        "prism3 = prism.copy()\n",
        "\n",
        "#groupby, mean for everything except precipitation\n",
        "prism3 = prism.groupby('year').mean().drop(columns='month')\n",
        "prism3['ppt'] = prism.groupby('year')['ppt'].sum()\n",
        "\n",
        "#join with yield tree from apple farms and reset index\n",
        "prism3 = prism3.loc[1972:].join(apple_farms['yield_tree'])\n",
        "prism3.reset_index(inplace=True)\n",
        "\n",
        "#make year into datetime and drop original year\n",
        "prism3['date'] = prism3['year'].apply(str) + '-' + '01'\n",
        "prism3['date'] = pd.to_datetime(prism3['date'])\n",
        "prism3.drop(columns='year', inplace=True)"
      ],
      "metadata": {
        "id": "kd5sqK6Rxz8M"
      },
      "execution_count": 248,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "prism3.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "cFF6cIa9y-Cq",
        "outputId": "0b5ff1c2-950e-4d7e-ef2b-21859c820a04"
      },
      "execution_count": 249,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      ppt       tmin      tmean       tmax   tdewmean    vpdmin     vpdmax  \\\n",
              "0  160.07  35.936667  47.560000  59.190833  31.820000  1.539500  14.790417   \n",
              "1  151.75  37.214167  48.848333  60.475833  31.831667  2.014167  15.471333   \n",
              "2  143.71  37.306667  48.983333  60.665000  32.799167  1.925167  15.160417   \n",
              "3  176.08  36.076667  47.360000  58.643333  32.312500  1.686667  14.011333   \n",
              "4   97.12  36.110833  47.941667  59.785833  32.952500  1.477500  13.763417   \n",
              "\n",
              "     vpddiff      tdiff   vpdmean  yield_tree       date  \n",
              "0  13.250917  23.254167  8.164958  157.833656 1972-01-01  \n",
              "1  13.457167  23.261667  8.742750  179.322328 1973-01-01  \n",
              "2  13.235250  23.358333  8.542792  157.728707 1974-01-01  \n",
              "3  12.324667  22.566667  7.849000  170.974729 1975-01-01  \n",
              "4  12.285917  23.675000  7.620458  160.319574 1976-01-01  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e4915cf4-e7e7-4e15-a8f8-7745bb162009\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ppt</th>\n",
              "      <th>tmin</th>\n",
              "      <th>tmean</th>\n",
              "      <th>tmax</th>\n",
              "      <th>tdewmean</th>\n",
              "      <th>vpdmin</th>\n",
              "      <th>vpdmax</th>\n",
              "      <th>vpddiff</th>\n",
              "      <th>tdiff</th>\n",
              "      <th>vpdmean</th>\n",
              "      <th>yield_tree</th>\n",
              "      <th>date</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>160.07</td>\n",
              "      <td>35.936667</td>\n",
              "      <td>47.560000</td>\n",
              "      <td>59.190833</td>\n",
              "      <td>31.820000</td>\n",
              "      <td>1.539500</td>\n",
              "      <td>14.790417</td>\n",
              "      <td>13.250917</td>\n",
              "      <td>23.254167</td>\n",
              "      <td>8.164958</td>\n",
              "      <td>157.833656</td>\n",
              "      <td>1972-01-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>151.75</td>\n",
              "      <td>37.214167</td>\n",
              "      <td>48.848333</td>\n",
              "      <td>60.475833</td>\n",
              "      <td>31.831667</td>\n",
              "      <td>2.014167</td>\n",
              "      <td>15.471333</td>\n",
              "      <td>13.457167</td>\n",
              "      <td>23.261667</td>\n",
              "      <td>8.742750</td>\n",
              "      <td>179.322328</td>\n",
              "      <td>1973-01-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>143.71</td>\n",
              "      <td>37.306667</td>\n",
              "      <td>48.983333</td>\n",
              "      <td>60.665000</td>\n",
              "      <td>32.799167</td>\n",
              "      <td>1.925167</td>\n",
              "      <td>15.160417</td>\n",
              "      <td>13.235250</td>\n",
              "      <td>23.358333</td>\n",
              "      <td>8.542792</td>\n",
              "      <td>157.728707</td>\n",
              "      <td>1974-01-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>176.08</td>\n",
              "      <td>36.076667</td>\n",
              "      <td>47.360000</td>\n",
              "      <td>58.643333</td>\n",
              "      <td>32.312500</td>\n",
              "      <td>1.686667</td>\n",
              "      <td>14.011333</td>\n",
              "      <td>12.324667</td>\n",
              "      <td>22.566667</td>\n",
              "      <td>7.849000</td>\n",
              "      <td>170.974729</td>\n",
              "      <td>1975-01-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>97.12</td>\n",
              "      <td>36.110833</td>\n",
              "      <td>47.941667</td>\n",
              "      <td>59.785833</td>\n",
              "      <td>32.952500</td>\n",
              "      <td>1.477500</td>\n",
              "      <td>13.763417</td>\n",
              "      <td>12.285917</td>\n",
              "      <td>23.675000</td>\n",
              "      <td>7.620458</td>\n",
              "      <td>160.319574</td>\n",
              "      <td>1976-01-01</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e4915cf4-e7e7-4e15-a8f8-7745bb162009')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-e4915cf4-e7e7-4e15-a8f8-7745bb162009 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-e4915cf4-e7e7-4e15-a8f8-7745bb162009');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 249
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "prism3.tail()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "WNgkhTury_7s",
        "outputId": "52dd07b7-cba4-4925-e0ec-80854694e439"
      },
      "execution_count": 250,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       ppt       tmin      tmean       tmax   tdewmean    vpdmin     vpdmax  \\\n",
              "45  175.55  37.214167  47.962500  58.707500  32.510000  1.788917  14.796583   \n",
              "46  135.34  38.705833  49.804167  60.909167  33.755833  1.734167  15.032417   \n",
              "47  126.79  37.000000  47.501667  58.002500  33.609167  1.395917  13.315250   \n",
              "48  137.08  38.450833  49.898333  61.340833  34.004167  1.877250  15.286333   \n",
              "49  130.38  39.106667  50.352500  61.603333  34.324167  2.285833  16.425000   \n",
              "\n",
              "      vpddiff      tdiff   vpdmean  yield_tree       date  \n",
              "45  13.007667  21.493333  8.292750   64.447592 2017-01-01  \n",
              "46  13.298250  22.203333  8.383292   54.004885 2018-01-01  \n",
              "47  11.919333  21.002500  7.355583   58.406612 2019-01-01  \n",
              "48  13.409083  22.890000  8.581792   50.384990 2020-01-01  \n",
              "49  14.139167  22.496667  9.355417   48.448917 2021-01-01  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-19b09139-01a4-40ae-a312-b7901a845199\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ppt</th>\n",
              "      <th>tmin</th>\n",
              "      <th>tmean</th>\n",
              "      <th>tmax</th>\n",
              "      <th>tdewmean</th>\n",
              "      <th>vpdmin</th>\n",
              "      <th>vpdmax</th>\n",
              "      <th>vpddiff</th>\n",
              "      <th>tdiff</th>\n",
              "      <th>vpdmean</th>\n",
              "      <th>yield_tree</th>\n",
              "      <th>date</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>45</th>\n",
              "      <td>175.55</td>\n",
              "      <td>37.214167</td>\n",
              "      <td>47.962500</td>\n",
              "      <td>58.707500</td>\n",
              "      <td>32.510000</td>\n",
              "      <td>1.788917</td>\n",
              "      <td>14.796583</td>\n",
              "      <td>13.007667</td>\n",
              "      <td>21.493333</td>\n",
              "      <td>8.292750</td>\n",
              "      <td>64.447592</td>\n",
              "      <td>2017-01-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>46</th>\n",
              "      <td>135.34</td>\n",
              "      <td>38.705833</td>\n",
              "      <td>49.804167</td>\n",
              "      <td>60.909167</td>\n",
              "      <td>33.755833</td>\n",
              "      <td>1.734167</td>\n",
              "      <td>15.032417</td>\n",
              "      <td>13.298250</td>\n",
              "      <td>22.203333</td>\n",
              "      <td>8.383292</td>\n",
              "      <td>54.004885</td>\n",
              "      <td>2018-01-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>47</th>\n",
              "      <td>126.79</td>\n",
              "      <td>37.000000</td>\n",
              "      <td>47.501667</td>\n",
              "      <td>58.002500</td>\n",
              "      <td>33.609167</td>\n",
              "      <td>1.395917</td>\n",
              "      <td>13.315250</td>\n",
              "      <td>11.919333</td>\n",
              "      <td>21.002500</td>\n",
              "      <td>7.355583</td>\n",
              "      <td>58.406612</td>\n",
              "      <td>2019-01-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>48</th>\n",
              "      <td>137.08</td>\n",
              "      <td>38.450833</td>\n",
              "      <td>49.898333</td>\n",
              "      <td>61.340833</td>\n",
              "      <td>34.004167</td>\n",
              "      <td>1.877250</td>\n",
              "      <td>15.286333</td>\n",
              "      <td>13.409083</td>\n",
              "      <td>22.890000</td>\n",
              "      <td>8.581792</td>\n",
              "      <td>50.384990</td>\n",
              "      <td>2020-01-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49</th>\n",
              "      <td>130.38</td>\n",
              "      <td>39.106667</td>\n",
              "      <td>50.352500</td>\n",
              "      <td>61.603333</td>\n",
              "      <td>34.324167</td>\n",
              "      <td>2.285833</td>\n",
              "      <td>16.425000</td>\n",
              "      <td>14.139167</td>\n",
              "      <td>22.496667</td>\n",
              "      <td>9.355417</td>\n",
              "      <td>48.448917</td>\n",
              "      <td>2021-01-01</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-19b09139-01a4-40ae-a312-b7901a845199')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-19b09139-01a4-40ae-a312-b7901a845199 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-19b09139-01a4-40ae-a312-b7901a845199');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 250
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "prism3.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "yMrPXqJGOchI",
        "outputId": "87bb3256-86dc-494e-c656-b25c4ad80e2d"
      },
      "execution_count": 251,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(50, 12)"
            ]
          },
          "metadata": {},
          "execution_count": 251
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Model with yield per tree"
      ],
      "metadata": {
        "id": "I5gwOXTZ9zD5"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#make a df p with datetime and yield_acre_lbs\n",
        "p = prism3[['date', 'yield_tree']]\n",
        "p.rename(columns={'date':'ds', 'yield_tree': 'y'}, inplace=True)\n",
        "\n",
        "#add best predictors\n",
        "best_predictors = list(prism3.columns[:10])\n",
        "for predictor in best_predictors:\n",
        "  p[predictor] = prism3[predictor]\n",
        "p.apply(lambda x: x.isna().sum())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cXZ3ly_tINae",
        "outputId": "62639a1a-ef25-499d-adbf-1d41a608f29c"
      },
      "execution_count": 252,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.8/dist-packages/pandas/core/frame.py:5039: SettingWithCopyWarning:\n",
            "\n",
            "\n",
            "A value is trying to be set on a copy of a slice from a DataFrame\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "\n",
            "<ipython-input-252-a9e27d7a3a07>:8: SettingWithCopyWarning:\n",
            "\n",
            "\n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "ds          0\n",
              "y           0\n",
              "ppt         0\n",
              "tmin        0\n",
              "tmean       0\n",
              "tmax        0\n",
              "tdewmean    0\n",
              "vpdmin      0\n",
              "vpdmax      0\n",
              "vpddiff     0\n",
              "tdiff       0\n",
              "vpdmean     0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 252
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "p.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7bnw5OytNjcP",
        "outputId": "eaa51b04-c92f-4875-d7b9-b4fb3b326750"
      },
      "execution_count": 253,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(50, 12)"
            ]
          },
          "metadata": {},
          "execution_count": 253
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#split into train and test\n",
        "train = p[:-10]\n",
        "test = p[-10:]"
      ],
      "metadata": {
        "id": "OiFj_aYt3tyc"
      },
      "execution_count": 254,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "train.tail()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "4aS79euWAi3N",
        "outputId": "1bd24d11-d4ae-4485-8428-c12a7bf92086"
      },
      "execution_count": 255,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "           ds          y     ppt       tmin      tmean       tmax   tdewmean  \\\n",
              "35 2007-01-01  78.341014  122.61  37.030000  48.349167  59.674167  33.490833   \n",
              "36 2008-01-01  80.287206  110.83  35.610833  47.200833  58.787500  31.599167   \n",
              "37 2009-01-01  70.074196  128.39  36.566667  47.811667  59.065833  31.585833   \n",
              "38 2010-01-01  72.435395  183.97  38.096667  48.667500  59.233333  34.784167   \n",
              "39 2011-01-01  68.232662  139.44  36.036667  47.154167  58.275833  31.601667   \n",
              "\n",
              "      vpdmin     vpdmax    vpddiff      tdiff   vpdmean  \n",
              "35  1.436417  14.037000  12.600583  22.644167  7.736708  \n",
              "36  1.542500  13.993333  12.450833  23.176667  7.767917  \n",
              "37  1.701417  14.686083  12.984667  22.499167  8.193750  \n",
              "38  1.265667  12.738750  11.473083  21.136667  7.002208  \n",
              "39  1.605750  13.229333  11.623583  22.239167  7.417542  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-4ed3271c-c0d6-4008-802e-a7d8396e1f22\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ds</th>\n",
              "      <th>y</th>\n",
              "      <th>ppt</th>\n",
              "      <th>tmin</th>\n",
              "      <th>tmean</th>\n",
              "      <th>tmax</th>\n",
              "      <th>tdewmean</th>\n",
              "      <th>vpdmin</th>\n",
              "      <th>vpdmax</th>\n",
              "      <th>vpddiff</th>\n",
              "      <th>tdiff</th>\n",
              "      <th>vpdmean</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>2007-01-01</td>\n",
              "      <td>78.341014</td>\n",
              "      <td>122.61</td>\n",
              "      <td>37.030000</td>\n",
              "      <td>48.349167</td>\n",
              "      <td>59.674167</td>\n",
              "      <td>33.490833</td>\n",
              "      <td>1.436417</td>\n",
              "      <td>14.037000</td>\n",
              "      <td>12.600583</td>\n",
              "      <td>22.644167</td>\n",
              "      <td>7.736708</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>2008-01-01</td>\n",
              "      <td>80.287206</td>\n",
              "      <td>110.83</td>\n",
              "      <td>35.610833</td>\n",
              "      <td>47.200833</td>\n",
              "      <td>58.787500</td>\n",
              "      <td>31.599167</td>\n",
              "      <td>1.542500</td>\n",
              "      <td>13.993333</td>\n",
              "      <td>12.450833</td>\n",
              "      <td>23.176667</td>\n",
              "      <td>7.767917</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>2009-01-01</td>\n",
              "      <td>70.074196</td>\n",
              "      <td>128.39</td>\n",
              "      <td>36.566667</td>\n",
              "      <td>47.811667</td>\n",
              "      <td>59.065833</td>\n",
              "      <td>31.585833</td>\n",
              "      <td>1.701417</td>\n",
              "      <td>14.686083</td>\n",
              "      <td>12.984667</td>\n",
              "      <td>22.499167</td>\n",
              "      <td>8.193750</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>2010-01-01</td>\n",
              "      <td>72.435395</td>\n",
              "      <td>183.97</td>\n",
              "      <td>38.096667</td>\n",
              "      <td>48.667500</td>\n",
              "      <td>59.233333</td>\n",
              "      <td>34.784167</td>\n",
              "      <td>1.265667</td>\n",
              "      <td>12.738750</td>\n",
              "      <td>11.473083</td>\n",
              "      <td>21.136667</td>\n",
              "      <td>7.002208</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>2011-01-01</td>\n",
              "      <td>68.232662</td>\n",
              "      <td>139.44</td>\n",
              "      <td>36.036667</td>\n",
              "      <td>47.154167</td>\n",
              "      <td>58.275833</td>\n",
              "      <td>31.601667</td>\n",
              "      <td>1.605750</td>\n",
              "      <td>13.229333</td>\n",
              "      <td>11.623583</td>\n",
              "      <td>22.239167</td>\n",
              "      <td>7.417542</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4ed3271c-c0d6-4008-802e-a7d8396e1f22')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-4ed3271c-c0d6-4008-802e-a7d8396e1f22 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-4ed3271c-c0d6-4008-802e-a7d8396e1f22');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 255
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(train.shape)\n",
        "print(test.shape)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "KS2LU0qc-y69",
        "outputId": "7421cb05-fc25-4366-8c29-8e9d4d298ecc"
      },
      "execution_count": 256,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(40, 12)\n",
            "(10, 12)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#train the model on the historical data, adding in regressors\n",
        "m = Prophet()\n",
        "for reg in ['tdiff', 'vpdmin', 'ppt', 'vpdmean', 'vpddiff']:\n",
        "  m.add_regressor(reg)\n",
        "m.fit(train)\n",
        "\n",
        "#make future df manually, selecting the date and the regressors from the test data\n",
        "past = m.predict(train)\n",
        "future = test\n",
        "forecast = m.predict(future)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "c1AReuJM30nW",
        "outputId": "81617421-d6fd-42ff-c62f-b7dac552d87d"
      },
      "execution_count": 259,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:prophet:Disabling weekly seasonality. Run prophet with weekly_seasonality=True to override this.\n",
            "INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n",
            "DEBUG:cmdstanpy:input tempfile: /tmp/tmp5v91vrao/s0ikeckk.json\n",
            "DEBUG:cmdstanpy:input tempfile: /tmp/tmp5v91vrao/cnabq8u2.json\n",
            "DEBUG:cmdstanpy:idx 0\n",
            "DEBUG:cmdstanpy:running CmdStan, num_threads: None\n",
            "DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.8/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=75590', 'data', 'file=/tmp/tmp5v91vrao/s0ikeckk.json', 'init=/tmp/tmp5v91vrao/cnabq8u2.json', 'output', 'file=/tmp/tmp5v91vrao/prophet_model_z60k2i0/prophet_model-20221207032322.csv', 'method=optimize', 'algorithm=newton', 'iter=10000']\n",
            "03:23:22 - cmdstanpy - INFO - Chain [1] start processing\n",
            "INFO:cmdstanpy:Chain [1] start processing\n",
            "03:23:22 - cmdstanpy - INFO - Chain [1] done processing\n",
            "INFO:cmdstanpy:Chain [1] done processing\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "m.plot(past)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 865
        },
        "id": "YBbUEQ-48Zmv",
        "outputId": "8a81dd69-8a9d-42ed-b91c-e14dc6222328"
      },
      "execution_count": 260,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Figure size 720x432 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {},
          "execution_count": 260
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x432 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "m.plot(forecast)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 865
        },
        "id": "0y4tUsrZ5vj6",
        "outputId": "65b4dfb2-cb6c-4fc4-eeb9-b28cd8f09c7f"
      },
      "execution_count": 261,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Figure size 720x432 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {},
          "execution_count": 261
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x432 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plot_plotly(m, forecast)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 617
        },
        "id": "Klt9oAXi5_7g",
        "outputId": "12f9aaea-be8b-4c2b-fc00-6e8f57f9b764"
      },
      "execution_count": 262,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script src=\"https://cdn.plot.ly/plotly-2.8.3.min.js\"></script>                <div id=\"a84a08e8-89d1-4e62-a1c5-bcf4bb6b246f\" class=\"plotly-graph-div\" style=\"height:600px; width:900px;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"a84a08e8-89d1-4e62-a1c5-bcf4bb6b246f\")) {                    Plotly.newPlot(                        \"a84a08e8-89d1-4e62-a1c5-bcf4bb6b246f\",                        [{\"marker\":{\"color\":\"black\",\"size\":4},\"mode\":\"markers\",\"name\":\"Actual\",\"x\":[\"1972-01-01T00:00:00\",\"1973-01-01T00:00:00\",\"1974-01-01T00:00:00\",\"1975-01-01T00:00:00\",\"1976-01-01T00:00:00\",\"1977-01-01T00:00:00\",\"1978-01-01T00:00:00\",\"1979-01-01T00:00:00\",\"1980-01-01T00:00:00\",\"1981-01-01T00:00:00\",\"1982-01-01T00:00:00\",\"1983-01-01T00:00:00\",\"1984-01-01T00:00:00\",\"1985-01-01T00:00:00\",\"1986-01-01T00:00:00\",\"1987-01-01T00:00:00\",\"1988-01-01T00:00:00\",\"1989-01-01T00:00:00\",\"1990-01-01T00:00:00\",\"1991-01-01T00:00:00\",\"1992-01-01T00:00:00\",\"1993-01-01T00:00:00\",\"1994-01-01T00:00:00\",\"1995-01-01T00:00:00\",\"1996-01-01T00:00:00\",\"1997-01-01T00:00:00\",\"1998-01-01T00:00:00\",\"1999-01-01T00:00:00\",\"2000-01-01T00:00:00\",\"2001-01-01T00:00:00\",\"2002-01-01T00:00:00\",\"2003-01-01T00:00:00\",\"2004-01-01T00:00:00\",\"2005-01-01T00:00:00\",\"2006-01-01T00:00:00\",\"2007-01-01T00:00:00\",\"2008-01-01T00:00:00\",\"2009-01-01T00:00:00\",\"2010-01-01T00:00:00\",\"2011-01-01T00:00:00\"],\"y\":[157.83365570599614,179.3223284100782,157.72870662460568,170.97472924187727,160.3195739014647,130.4508956145769,122.11981566820276,137.3913043478261,143.62139917695472,119.921875,102.23048327137546,109.40919037199126,100.57265569076594,64.30077301475755,86.61145617667357,125.42372881355932,101.19442601194427,125.08122157244964,112.34882240611076,96.3817841547099,100.0,101.97960407918417,113.30194231901118,88.67706528018486,95.00850822461712,81.8941504178273,105.09031198686371,78.26788596019365,94.39450026441037,82.16328653146125,84.14322250639387,73.57357357357357,97.2562469377756,88.77159309021113,84.6262341325811,78.3410138248848,80.28720626631853,70.07419620774938,72.43539545810494,68.23266219239373],\"type\":\"scatter\"},{\"hoverinfo\":\"skip\",\"line\":{\"width\":0},\"mode\":\"lines\",\"x\":[\"2012-01-01T00:00:00\",\"2013-01-01T00:00:00\",\"2014-01-01T00:00:00\",\"2015-01-01T00:00:00\",\"2016-01-01T00:00:00\",\"2017-01-01T00:00:00\",\"2018-01-01T00:00:00\",\"2019-01-01T00:00:00\",\"2020-01-01T00:00:00\",\"2021-01-01T00:00:00\"],\"y\":[54.04440978753316,41.74771801243255,51.70057607608672,56.871777873949256,53.16879646084472,43.049174303247035,39.20340835049988,33.31019451015058,39.095141403171226,41.37392470627056],\"type\":\"scatter\"},{\"fill\":\"tonexty\",\"fillcolor\":\"rgba(0, 114, 178, 0.2)\",\"line\":{\"color\":\"#0072B2\",\"width\":2},\"mode\":\"lines\",\"name\":\"Predicted\",\"x\":[\"2012-01-01T00:00:00\",\"2013-01-01T00:00:00\",\"2014-01-01T00:00:00\",\"2015-01-01T00:00:00\",\"2016-01-01T00:00:00\",\"2017-01-01T00:00:00\",\"2018-01-01T00:00:00\",\"2019-01-01T00:00:00\",\"2020-01-01T00:00:00\",\"2021-01-01T00:00:00\"],\"y\":[73.94891291707174,60.64436767093008,70.87021697478366,76.07077537135181,71.28103939141435,63.43213347441879,59.85151013008829,52.74146109942417,58.72137488908984,59.084025655779044],\"type\":\"scatter\"},{\"fill\":\"tonexty\",\"fillcolor\":\"rgba(0, 114, 178, 0.2)\",\"hoverinfo\":\"skip\",\"line\":{\"width\":0},\"mode\":\"lines\",\"x\":[\"2012-01-01T00:00:00\",\"2013-01-01T00:00:00\",\"2014-01-01T00:00:00\",\"2015-01-01T00:00:00\",\"2016-01-01T00:00:00\",\"2017-01-01T00:00:00\",\"2018-01-01T00:00:00\",\"2019-01-01T00:00:00\",\"2020-01-01T00:00:00\",\"2021-01-01T00:00:00\"],\"y\":[92.492927034031,79.38951554980818,89.6607731729398,95.55808892049794,91.23402879270625,81.9047775816444,80.73935063850725,71.76633693651728,76.93668815069594,78.23099723592003],\"type\":\"scatter\"}],                        {\"height\":600,\"showlegend\":false,\"width\":900,\"xaxis\":{\"rangeselector\":{\"buttons\":[{\"count\":7,\"label\":\"1w\",\"step\":\"day\",\"stepmode\":\"backward\"},{\"count\":1,\"label\":\"1m\",\"step\":\"month\",\"stepmode\":\"backward\"},{\"count\":6,\"label\":\"6m\",\"step\":\"month\",\"stepmode\":\"backward\"},{\"count\":1,\"label\":\"1y\",\"step\":\"year\",\"stepmode\":\"backward\"},{\"step\":\"all\"}]},\"rangeslider\":{\"visible\":true},\"title\":{\"text\":\"ds\"},\"type\":\"date\"},\"yaxis\":{\"title\":{\"text\":\"y\"}},\"template\":{\"data\":{\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"choropleth\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"contour\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"contourcarpet\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmap\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmapgl\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2d\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2dcontour\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattermapbox\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolar\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolargl\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]],\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"geo\":{\"bgcolor\":\"white\",\"lakecolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"white\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"mapbox\":{\"style\":\"light\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"ternary\":{\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"title\":{\"x\":0.05},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2}}}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('a84a08e8-89d1-4e62-a1c5-bcf4bb6b246f');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plot_components_plotly(m, forecast)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 617
        },
        "id": "8ZYnItjf6Fh9",
        "outputId": "624b91da-a87a-42b7-e2ce-746cd68e2c70"
      },
      "execution_count": 263,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script src=\"https://cdn.plot.ly/plotly-2.8.3.min.js\"></script>                <div id=\"150c75ad-b9ee-47f1-a426-11c27a9b504a\" class=\"plotly-graph-div\" style=\"height:600px; width:900px;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"150c75ad-b9ee-47f1-a426-11c27a9b504a\")) {                    Plotly.newPlot(                        \"150c75ad-b9ee-47f1-a426-11c27a9b504a\",                        [{\"line\":{\"color\":\"#0072B2\",\"width\":2},\"mode\":\"lines\",\"name\":\"trend\",\"x\":[\"2012-01-01T00:00:00\",\"2013-01-01T00:00:00\",\"2014-01-01T00:00:00\",\"2015-01-01T00:00:00\",\"2016-01-01T00:00:00\",\"2017-01-01T00:00:00\",\"2018-01-01T00:00:00\",\"2019-01-01T00:00:00\",\"2020-01-01T00:00:00\",\"2021-01-01T00:00:00\"],\"y\":[-14.649254764274211,-16.819475575367807,-18.983766821403773,-21.148058067439738,-23.312349313475703,-25.482570124569293,-27.646861370605258,-29.811152616641223,-31.97544386267719,-34.145664673770796],\"type\":\"scatter\",\"xaxis\":\"x\",\"yaxis\":\"y\"},{\"line\":{\"color\":\"rgba(0, 114, 178, 0.2)\",\"width\":0},\"mode\":\"lines\",\"name\":\"trend_upper\",\"x\":[\"2012-01-01T00:00:00\",\"2013-01-01T00:00:00\",\"2014-01-01T00:00:00\",\"2015-01-01T00:00:00\",\"2016-01-01T00:00:00\",\"2017-01-01T00:00:00\",\"2018-01-01T00:00:00\",\"2019-01-01T00:00:00\",\"2020-01-01T00:00:00\",\"2021-01-01T00:00:00\"],\"y\":[-14.649199055707502,-16.819290622934076,-18.983377022465415,-21.147437959958655,-23.311485362100786,-25.481417781106174,-27.64543246984207,-29.809484069486928,-31.97341945247597,-34.14324341424379],\"type\":\"scatter\",\"xaxis\":\"x\",\"yaxis\":\"y\"},{\"fill\":\"tonexty\",\"fillcolor\":\"rgba(0, 114, 178, 0.2)\",\"line\":{\"color\":\"rgba(0, 114, 178, 0.2)\",\"width\":0},\"mode\":\"lines\",\"name\":\"trend_lower\",\"x\":[\"2012-01-01T00:00:00\",\"2013-01-01T00:00:00\",\"2014-01-01T00:00:00\",\"2015-01-01T00:00:00\",\"2016-01-01T00:00:00\",\"2017-01-01T00:00:00\",\"2018-01-01T00:00:00\",\"2019-01-01T00:00:00\",\"2020-01-01T00:00:00\",\"2021-01-01T00:00:00\"],\"y\":[-14.649300187794713,-16.819630382299717,-18.98407785138122,-21.148582667136342,-23.313113545014037,-25.483572744923325,-27.648174703554496,-29.812796947959615,-31.977443868482112,-34.14804863694448],\"type\":\"scatter\",\"xaxis\":\"x\",\"yaxis\":\"y\"},{\"line\":{\"color\":\"#0072B2\",\"width\":2},\"mode\":\"lines\",\"name\":\"extra_regressors_additive\",\"x\":[\"2012-01-01T00:00:00\",\"2013-01-01T00:00:00\",\"2014-01-01T00:00:00\",\"2015-01-01T00:00:00\",\"2016-01-01T00:00:00\",\"2017-01-01T00:00:00\",\"2018-01-01T00:00:00\",\"2019-01-01T00:00:00\",\"2020-01-01T00:00:00\",\"2021-01-01T00:00:00\"],\"y\":[7.33730330598338,4.782587913035708,15.677123327020515,20.1809518512194,13.332524329529063,16.233448265728768,13.32151103153331,5.514732128487999,9.435954376414813,20.548434996292833],\"type\":\"scatter\",\"xaxis\":\"x2\",\"yaxis\":\"y2\"},{\"line\":{\"color\":\"#0072B2\",\"width\":2},\"mode\":\"lines\",\"name\":\"yearly\",\"x\":[\"2017-01-01T00:00:00\",\"2017-01-02T00:00:59.178082\",\"2017-01-03T00:01:58.356164\",\"2017-01-04T00:02:57.534246\",\"2017-01-05T00:03:56.712328\",\"2017-01-06T00:04:55.890411\",\"2017-01-07T00:05:55.068493\",\"2017-01-08T00:06:54.246575\",\"2017-01-09T00:07:53.424657\",\"2017-01-10T00:08:52.602739\",\"2017-01-11T00:09:51.780822\",\"2017-01-12T00:10:50.958904\",\"2017-01-13T00:11:50.136986\",\"2017-01-14T00:12:49.315068\",\"2017-01-15T00:13:48.493150\",\"2017-01-16T00:14:47.671232\",\"2017-01-17T00:15:46.849315\",\"2017-01-18T00:16:46.027397\",\"2017-01-19T00:17:45.205479\",\"2017-01-20T00:18:44.383561\",\"2017-01-21T00:19:43.561643\",\"2017-01-22T00:20:42.739726\",\"2017-01-23T00:21:41.917808\",\"2017-01-24T00:22:41.095890\",\"2017-01-25T00:23:40.273972\",\"2017-01-26T00:24:39.452054\",\"2017-01-27T00:25:38.630137\",\"2017-01-28T00:26:37.808219\",\"2017-01-29T00:27:36.986301\",\"2017-01-30T00:28:36.164383\",\"2017-01-31T00:29:35.342465\",\"2017-02-01T00:30:34.520547\",\"2017-02-02T00:31:33.698630\",\"2017-02-03T00:32:32.876712\",\"2017-02-04T00:33:32.054794\",\"2017-02-05T00:34:31.232876\",\"2017-02-06T00:35:30.410958\",\"2017-02-07T00:36:29.589041\",\"2017-02-08T00:37:28.767123\",\"2017-02-09T00:38:27.945205\",\"2017-02-10T00:39:27.123287\",\"2017-02-11T00:40:26.301369\",\"2017-02-12T00:41:25.479452\",\"2017-02-13T00:42:24.657534\",\"2017-02-14T00:43:23.835616\",\"2017-02-15T00:44:23.013698\",\"2017-02-16T00:45:22.191780\",\"2017-02-17T00:46:21.369862\",\"2017-02-18T00:47:20.547945\",\"2017-02-19T00:48:19.726027\",\"2017-02-20T00:49:18.904109\",\"2017-02-21T00:50:18.082191\",\"2017-02-22T00:51:17.260273\",\"2017-02-23T00:52:16.438356\",\"2017-02-24T00:53:15.616438\",\"2017-02-25T00:54:14.794520\",\"2017-02-26T00:55:13.972602\",\"2017-02-27T00:56:13.150684\",\"2017-02-28T00:57:12.328767\",\"2017-03-01T00:58:11.506849\",\"2017-03-02T00:59:10.684931\",\"2017-03-03T01:00:09.863013\",\"2017-03-04T01:01:09.041095\",\"2017-03-05T01:02:08.219177\",\"2017-03-06T01:03:07.397260\",\"2017-03-07T01:04:06.575342\",\"2017-03-08T01:05:05.753424\",\"2017-03-09T01:06:04.931506\",\"2017-03-10T01:07:04.109588\",\"2017-03-11T01:08:03.287671\",\"2017-03-12T01:09:02.465753\",\"2017-03-13T01:10:01.643835\",\"2017-03-14T01:11:00.821917\",\"2017-03-15T01:12:00\",\"2017-03-16T01:12:59.178082\",\"2017-03-17T01:13:58.356164\",\"2017-03-18T01:14:57.534246\",\"2017-03-19T01:15:56.712328\",\"2017-03-20T01:16:55.890411\",\"2017-03-21T01:17:55.068493\",\"2017-03-22T01:18:54.246575\",\"2017-03-23T01:19:53.424657\",\"2017-03-24T01:20:52.602739\",\"2017-03-25T01:21:51.780822\",\"2017-03-26T01:22:50.958904\",\"2017-03-27T01:23:50.136986\",\"2017-03-28T01:24:49.315068\",\"2017-03-29T01:25:48.493150\",\"2017-03-30T01:26:47.671232\",\"2017-03-31T01:27:46.849315\",\"2017-04-01T01:28:46.027397\",\"2017-04-02T01:29:45.205479\",\"2017-04-03T01:30:44.383561\",\"2017-04-04T01:31:43.561643\",\"2017-04-05T01:32:42.739726\",\"2017-04-06T01:33:41.917808\",\"2017-04-07T01:34:41.095890\",\"2017-04-08T01:35:40.273972\",\"2017-04-09T01:36:39.452054\",\"2017-04-10T01:37:38.630137\",\"2017-04-11T01:38:37.808219\",\"2017-04-12T01:39:36.986301\",\"2017-04-13T01:40:36.164383\",\"2017-04-14T01:41:35.342465\",\"2017-04-15T01:42:34.520547\",\"2017-04-16T01:43:33.698630\",\"2017-04-17T01:44:32.876712\",\"2017-04-18T01:45:32.054794\",\"2017-04-19T01:46:31.232876\",\"2017-04-20T01:47:30.410958\",\"2017-04-21T01:48:29.589041\",\"2017-04-22T01:49:28.767123\",\"2017-04-23T01:50:27.945205\",\"2017-04-24T01:51:27.123287\",\"2017-04-25T01:52:26.301369\",\"2017-04-26T01:53:25.479452\",\"2017-04-27T01:54:24.657534\",\"2017-04-28T01:55:23.835616\",\"2017-04-29T01:56:23.013698\",\"2017-04-30T01:57:22.191780\",\"2017-05-01T01:58:21.369862\",\"2017-05-02T01:59:20.547945\",\"2017-05-03T02:00:19.726027\",\"2017-05-04T02:01:18.904109\",\"2017-05-05T02:02:18.082191\",\"2017-05-06T02:03:17.260273\",\"2017-05-07T02:04:16.438356\",\"2017-05-08T02:05:15.616438\",\"2017-05-09T02:06:14.794520\",\"2017-05-10T02:07:13.972602\",\"2017-05-11T02:08:13.150684\",\"2017-05-12T02:09:12.328767\",\"2017-05-13T02:10:11.506849\",\"2017-05-14T02:11:10.684931\",\"2017-05-15T02:12:09.863013\",\"2017-05-16T02:13:09.041095\",\"2017-05-17T02:14:08.219177\",\"2017-05-18T02:15:07.397260\",\"2017-05-19T02:16:06.575342\",\"2017-05-20T02:17:05.753424\",\"2017-05-21T02:18:04.931506\",\"2017-05-22T02:19:04.109588\",\"2017-05-23T02:20:03.287671\",\"2017-05-24T02:21:02.465753\",\"2017-05-25T02:22:01.643835\",\"2017-05-26T02:23:00.821917\",\"2017-05-27T02:24:00\",\"2017-05-28T02:24:59.178082\",\"2017-05-29T02:25:58.356164\",\"2017-05-30T02:26:57.534246\",\"2017-05-31T02:27:56.712328\",\"2017-06-01T02:28:55.890411\",\"2017-06-02T02:29:55.068493\",\"2017-06-03T02:30:54.246575\",\"2017-06-04T02:31:53.424657\",\"2017-06-05T02:32:52.602739\",\"2017-06-06T02:33:51.780822\",\"2017-06-07T02:34:50.958904\",\"2017-06-08T02:35:50.136986\",\"2017-06-09T02:36:49.315068\",\"2017-06-10T02:37:48.493150\",\"2017-06-11T02:38:47.671232\",\"2017-06-12T02:39:46.849315\",\"2017-06-13T02:40:46.027397\",\"2017-06-14T02:41:45.205479\",\"2017-06-15T02:42:44.383561\",\"2017-06-16T02:43:43.561643\",\"2017-06-17T02:44:42.739726\",\"2017-06-18T02:45:41.917808\",\"2017-06-19T02:46:41.095890\",\"2017-06-20T02:47:40.273972\",\"2017-06-21T02:48:39.452054\",\"2017-06-22T02:49:38.630137\",\"2017-06-23T02:50:37.808219\",\"2017-06-24T02:51:36.986301\",\"2017-06-25T02:52:36.164383\",\"2017-06-26T02:53:35.342465\",\"2017-06-27T02:54:34.520547\",\"2017-06-28T02:55:33.698630\",\"2017-06-29T02:56:32.876712\",\"2017-06-30T02:57:32.054794\",\"2017-07-01T02:58:31.232876\",\"2017-07-02T02:59:30.410958\",\"2017-07-03T03:00:29.589041\",\"2017-07-04T03:01:28.767123\",\"2017-07-05T03:02:27.945205\",\"2017-07-06T03:03:27.123287\",\"2017-07-07T03:04:26.301369\",\"2017-07-08T03:05:25.479452\",\"2017-07-09T03:06:24.657534\",\"2017-07-10T03:07:23.835616\",\"2017-07-11T03:08:23.013698\",\"2017-07-12T03:09:22.191780\",\"2017-07-13T03:10:21.369862\",\"2017-07-14T03:11:20.547945\",\"2017-07-15T03:12:19.726027\",\"2017-07-16T03:13:18.904109\",\"2017-07-17T03:14:18.082191\",\"2017-07-18T03:15:17.260273\",\"2017-07-19T03:16:16.438356\",\"2017-07-20T03:17:15.616438\",\"2017-07-21T03:18:14.794520\",\"2017-07-22T03:19:13.972602\",\"2017-07-23T03:20:13.150684\",\"2017-07-24T03:21:12.328767\",\"2017-07-25T03:22:11.506849\",\"2017-07-26T03:23:10.684931\",\"2017-07-27T03:24:09.863013\",\"2017-07-28T03:25:09.041095\",\"2017-07-29T03:26:08.219177\",\"2017-07-30T03:27:07.397260\",\"2017-07-31T03:28:06.575342\",\"2017-08-01T03:29:05.753424\",\"2017-08-02T03:30:04.931506\",\"2017-08-03T03:31:04.109588\",\"2017-08-04T03:32:03.287671\",\"2017-08-05T03:33:02.465753\",\"2017-08-06T03:34:01.643835\",\"2017-08-07T03:35:00.821917\",\"2017-08-08T03:36:00\",\"2017-08-09T03:36:59.178082\",\"2017-08-10T03:37:58.356164\",\"2017-08-11T03:38:57.534246\",\"2017-08-12T03:39:56.712328\",\"2017-08-13T03:40:55.890411\",\"2017-08-14T03:41:55.068493\",\"2017-08-15T03:42:54.246575\",\"2017-08-16T03:43:53.424657\",\"2017-08-17T03:44:52.602739\",\"2017-08-18T03:45:51.780822\",\"2017-08-19T03:46:50.958904\",\"2017-08-20T03:47:50.136986\",\"2017-08-21T03:48:49.315068\",\"2017-08-22T03:49:48.493150\",\"2017-08-23T03:50:47.671232\",\"2017-08-24T03:51:46.849315\",\"2017-08-25T03:52:46.027397\",\"2017-08-26T03:53:45.205479\",\"2017-08-27T03:54:44.383561\",\"2017-08-28T03:55:43.561643\",\"2017-08-29T03:56:42.739726\",\"2017-08-30T03:57:41.917808\",\"2017-08-31T03:58:41.095890\",\"2017-09-01T03:59:40.273972\",\"2017-09-02T04:00:39.452054\",\"2017-09-03T04:01:38.630137\",\"2017-09-04T04:02:37.808219\",\"2017-09-05T04:03:36.986301\",\"2017-09-06T04:04:36.164383\",\"2017-09-07T04:05:35.342465\",\"2017-09-08T04:06:34.520547\",\"2017-09-09T04:07:33.698630\",\"2017-09-10T04:08:32.876712\",\"2017-09-11T04:09:32.054794\",\"2017-09-12T04:10:31.232876\",\"2017-09-13T04:11:30.410958\",\"2017-09-14T04:12:29.589041\",\"2017-09-15T04:13:28.767123\",\"2017-09-16T04:14:27.945205\",\"2017-09-17T04:15:27.123287\",\"2017-09-18T04:16:26.301369\",\"2017-09-19T04:17:25.479452\",\"2017-09-20T04:18:24.657534\",\"2017-09-21T04:19:23.835616\",\"2017-09-22T04:20:23.013698\",\"2017-09-23T04:21:22.191780\",\"2017-09-24T04:22:21.369862\",\"2017-09-25T04:23:20.547945\",\"2017-09-26T04:24:19.726027\",\"2017-09-27T04:25:18.904109\",\"2017-09-28T04:26:18.082191\",\"2017-09-29T04:27:17.260273\",\"2017-09-30T04:28:16.438356\",\"2017-10-01T04:29:15.616438\",\"2017-10-02T04:30:14.794520\",\"2017-10-03T04:31:13.972602\",\"2017-10-04T04:32:13.150684\",\"2017-10-05T04:33:12.328767\",\"2017-10-06T04:34:11.506849\",\"2017-10-07T04:35:10.684931\",\"2017-10-08T04:36:09.863013\",\"2017-10-09T04:37:09.041095\",\"2017-10-10T04:38:08.219177\",\"2017-10-11T04:39:07.397260\",\"2017-10-12T04:40:06.575342\",\"2017-10-13T04:41:05.753424\",\"2017-10-14T04:42:04.931506\",\"2017-10-15T04:43:04.109588\",\"2017-10-16T04:44:03.287671\",\"2017-10-17T04:45:02.465753\",\"2017-10-18T04:46:01.643835\",\"2017-10-19T04:47:00.821917\",\"2017-10-20T04:48:00\",\"2017-10-21T04:48:59.178082\",\"2017-10-22T04:49:58.356164\",\"2017-10-23T04:50:57.534246\",\"2017-10-24T04:51:56.712328\",\"2017-10-25T04:52:55.890411\",\"2017-10-26T04:53:55.068493\",\"2017-10-27T04:54:54.246575\",\"2017-10-28T04:55:53.424657\",\"2017-10-29T04:56:52.602739\",\"2017-10-30T04:57:51.780822\",\"2017-10-31T04:58:50.958904\",\"2017-11-01T04:59:50.136986\",\"2017-11-02T05:00:49.315068\",\"2017-11-03T05:01:48.493150\",\"2017-11-04T05:02:47.671232\",\"2017-11-05T05:03:46.849315\",\"2017-11-06T05:04:46.027397\",\"2017-11-07T05:05:45.205479\",\"2017-11-08T05:06:44.383561\",\"2017-11-09T05:07:43.561643\",\"2017-11-10T05:08:42.739726\",\"2017-11-11T05:09:41.917808\",\"2017-11-12T05:10:41.095890\",\"2017-11-13T05:11:40.273972\",\"2017-11-14T05:12:39.452054\",\"2017-11-15T05:13:38.630137\",\"2017-11-16T05:14:37.808219\",\"2017-11-17T05:15:36.986301\",\"2017-11-18T05:16:36.164383\",\"2017-11-19T05:17:35.342465\",\"2017-11-20T05:18:34.520547\",\"2017-11-21T05:19:33.698630\",\"2017-11-22T05:20:32.876712\",\"2017-11-23T05:21:32.054794\",\"2017-11-24T05:22:31.232876\",\"2017-11-25T05:23:30.410958\",\"2017-11-26T05:24:29.589041\",\"2017-11-27T05:25:28.767123\",\"2017-11-28T05:26:27.945205\",\"2017-11-29T05:27:27.123287\",\"2017-11-30T05:28:26.301369\",\"2017-12-01T05:29:25.479452\",\"2017-12-02T05:30:24.657534\",\"2017-12-03T05:31:23.835616\",\"2017-12-04T05:32:23.013698\",\"2017-12-05T05:33:22.191780\",\"2017-12-06T05:34:21.369862\",\"2017-12-07T05:35:20.547945\",\"2017-12-08T05:36:19.726027\",\"2017-12-09T05:37:18.904109\",\"2017-12-10T05:38:18.082191\",\"2017-12-11T05:39:17.260273\",\"2017-12-12T05:40:16.438356\",\"2017-12-13T05:41:15.616438\",\"2017-12-14T05:42:14.794520\",\"2017-12-15T05:43:13.972602\",\"2017-12-16T05:44:13.150684\",\"2017-12-17T05:45:12.328767\",\"2017-12-18T05:46:11.506849\",\"2017-12-19T05:47:10.684931\",\"2017-12-20T05:48:09.863013\",\"2017-12-21T05:49:09.041095\",\"2017-12-22T05:50:08.219177\",\"2017-12-23T05:51:07.397260\",\"2017-12-24T05:52:06.575342\",\"2017-12-25T05:53:05.753424\",\"2017-12-26T05:54:04.931506\",\"2017-12-27T05:55:04.109588\",\"2017-12-28T05:56:03.287671\",\"2017-12-29T05:57:02.465753\",\"2017-12-30T05:58:01.643835\",\"2017-12-31T05:59:00.821917\"],\"y\":[72.6812553332593,80.34942137292805,109.53699067876556,159.3055281798881,228.12903810722938,313.936149305788,414.1670159286113,525.8433678899694,645.6497879786314,770.0239885898828,895.2536188605078,1017.5769592969152,1133.2847604730905,1238.8204576503274,1330.8760448184075,1406.4810180475554,1463.081995490907,1498.6108842099375,1511.5397847475035,1500.9211939374131,1466.4124744157984,1408.2839941958307,1327.4107893227842,1225.2480544506684,1103.7912076288424,965.5216943875868,813.3400808140073,650.4883251571777,480.4634033235409,306.92468773003384,133.597635387586,-35.82357415636136,-197.77179932566483,-348.89850628742676,-486.1586927367157,-606.886911585392,-708.862402859413,-790.3616580063706,-850.1971009958289,-887.7409647678245,-902.9338583500447,-896.2779475960685,-868.8150987991169,-822.0907475395452,-758.1046434249878,-679.24997421984,-588.2426804768406,-488.04302595960894,-381.771683039397,-272.62272095485514,-163.77594516202427,-58.311026909196805,40.87421556783799,131.1391663787826,210.16737873229377,276.0234055675098,327.1980470096577,362.64091195009274,381.77956299628505,384.5249028089666,371.26285411925176,342.8327742261773,300.4934164095813,245.87759500248208,180.93701823926997,107.8790149451663,29.097090613566905,-52.90260011142264,-135.5766878227359,-216.41972694507635,-293.03687374900403,-363.21203902715035,-424.9696092430116,-476.6280419433533,-516.8438998765182,-544.645185619454,-559.4531655022614,-561.0922184270028,-549.787601498463,-526.1513796702059,-491.1571105576114,-446.10419815184855,-392.57312123052003,-332.37299548261376,-267.4831357564768,-199.99044074581766,-132.0245227966629,-65.69254794505918,-3.0157351399477395,54.13061010384795,104.07178083629147,145.38150469761064,176.9215864616104,197.87227377876087,207.7525533017831,206.42989536163282,194.11928742942138,171.37172000081605,139.05260365999945,98.31089357074771,50.53996878931832,-2.6684492474812997,-59.57585873351207,-118.35239018566753,-177.13434099755275,-234.08205712377952,-287.4363951605911,-335.57205935048,-377.04622020121747,-410.64098068968144,-435.39845722081424,-450.6474791713649,-456.0211755886523,-451.46500215331713,-437.2350571404919,-413.8868327608574,-382.254838926636,-343.42381142874956,-298.692467495554,-249.53099131688074,-197.53361396334742,-144.36779087792306,-91.72157200918534,-41.25080206791012,5.472219459802973,47.0070465431863,82.08889634605491,109.6666431127912,128.93386749920043,139.35205454008968,140.66528163403763,132.90600462996895,116.39182707204469,91.71341638325386,59.71400268579512,21.461152810069354,-21.788253932283194,-68.62871752027914,-117.551177657377,-166.99101676222094,-215.37749675332097,-261.18308513762906,-302.97113795989424,-339.44046634907806,-369.4654177167237,-392.1302486641473,-406.75674968063026,-412.9242959529409,-410.48173736861776,-399.55079658314446,-380.52090894329643,-354.0357038953984,-320.9715860762229,-282.4091176678736,-239.59812432986155,-193.91763840785796,-146.8319493411242,-99.8441475793934,-54.44862138880216,-12.083993558908261,25.912033447213243,58.344519313917296,84.19851732986979,102.67054532216366,113.19332834899862,115.45305739789144,109.39864323979288,95.24269509803517,73.45421214917994,44.74323405651351,10.037946806778768,-29.545025693069846,-72.7362026685108,-118.15357702408627,-164.34642580672195,-209.8412241930653,-253.18822268625203,-293.0072280902673,-328.03115504368725,-357.1459856598342,-379.4258878240995,-394.1623944778973,-400.88673204067834,-399.38460019611983,-389.7029409956305,-372.14848527664407,-347.27812103149205,-315.88138363841307,-278.9556138727503,-237.67455874504554,-193.35139532734428,-147.3973325235438,-101.27708470112486,-56.462609979568846,-14.38656161439275,23.603088418577915,56.28582923074462,82.60744883971857,101.71370560161145,112.97776810682264,116.02055100848857,110.72329436397064,97.23197487438607,75.95339150742407,47.543027528949004,12.885047926803889,-26.93496237246203,-70.66368587459678,-116.91914895362748,-164.2339795733943,-211.10150430354747,-256.0232497207374,-297.5563646832722,-334.35947725120536,-365.23554352689246,-389.1703341012195,-405.3653346249126,-413.26400631592935,-412.5705548912249,-403.2605863460957,-385.5832781534932,-360.0549572134239,-327.4442431365677,-288.7491789898383,-245.16702329752613,-198.05760903640706,-148.90138037485164,-99.25338949201792,-50.6946685360676,-4.782481367867527,36.99899682628812,73.28602820678528,102.87919747522251,124.78244036326703,138.23596441763362,142.7419928556083,138.08247821595785,124.32817620078919,101.83873416037244,71.25372512398206,33.474838678114835,-10.360284228855468,-58.911822852722494,-110.67816354636514,-164.04169844980296,-217.3186555021667,-268.8114436245216,-316.86190687210586,-359.90384011557404,-396.5131279146174,-425.4539278180202,-445.7194279073438,-456.56586303587864,-457.53867052104493,-448.4898983536845,-429.5862404668462,-401.3073565265307,-364.43442957578714,-320.0292148013449,-269.4041275584045,-214.08419957983452,-155.76199034508687,-96.24676783103398,-37.40946216018023,18.874959092686662,70.78594879261979,116.6148819820326,154.81982195893968,184.07583521974126,203.31925661227265,211.78447260587177,209.03200229204364,194.96690666727366,169.8468396960546,134.27936137041,89.20845452061427,35.89051390895255,-24.13960158055557,-89.11155480908036,-157.07037101463135,-225.9336978712333,-293.5538378450248,-357.78274088264675,-416.538033106763,-467.8681010428016,-510.0142533822641,-541.4680438064122,-561.0219577950563,-567.8118407045032,-561.3496690460115,-541.5455357858928,-508.7180260582962,-463.59249331202227,-407.2870980486987,-341.28683173589775,-267.40610667104033,-187.7408379915721,-104.61126631728413,-20.497059059648652,62.03352368711331,140.39841416538152,212.07834545234118,274.6930734669768,326.07498340968596,364.33789710752393,387.9390072627002,395.7320355762021,387.0099398244447,361.53577413309256,319.5606293842331,261.8279379862864,189.56380917104102,104.45345678006952,8.604179883993902,-95.50425384443945,-205.0806026712715,-317.0929653555232,-428.3475601797859,-535.5733650363793,-635.5103245828192,-724.9987031781961,-801.0671024289561,-861.0166720310365,-902.4991224612647,-923.5862962641073,-922.8292675595416,-899.3052114130785,-852.6506086124332,-783.079718447497,-691.3876521657793,-578.9378018723061,-447.6338119626319,-299.87671061288927,-138.5082352427373,33.25822356044158,211.91728162784727,393.7597398953555,574.9669474235195,751.7088270944579,920.2429244030274,1077.0117945419886,1218.7360720882034,1342.5006706318768,1445.831734073522,1526.7622025298476,1583.884157440497,1616.3864642934825,1624.0766278266392,1607.3862026406523,1567.3595501217844,1505.6261879444173,1424.357428594319,1326.2084357254837,1214.2472296935798,1091.8725349581043,962.7226721214014,830.5779473727737,699.2591749901608,572.5250790965689,453.9713558555351,346.93413568275395,254.4004678100521,178.9282599587202,122.57784900942406,86.85706161446939],\"type\":\"scatter\",\"xaxis\":\"x3\",\"yaxis\":\"y3\"}],                        {\"template\":{\"data\":{\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"choropleth\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"contour\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"contourcarpet\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmap\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmapgl\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2d\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2dcontour\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattermapbox\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolar\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolargl\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]],\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"geo\":{\"bgcolor\":\"white\",\"lakecolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"white\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"mapbox\":{\"style\":\"light\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"ternary\":{\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"title\":{\"x\":0.05},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"range\":[\"2011-07-20T14:24:00\",\"2021-06-14T09:36:00\"],\"type\":\"date\"},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.7333333333333333,1.0],\"title\":{\"text\":\"trend\"},\"rangemode\":\"normal\",\"zerolinecolor\":\"#AAA\"},\"xaxis2\":{\"anchor\":\"y2\",\"domain\":[0.0,1.0],\"range\":[\"2011-07-20T14:24:00\",\"2021-06-14T09:36:00\"],\"type\":\"date\"},\"yaxis2\":{\"anchor\":\"x2\",\"domain\":[0.36666666666666664,0.6333333333333333],\"title\":{\"text\":\"extra_regressors_additive\"},\"rangemode\":\"tozero\",\"zerolinecolor\":\"#AAA\"},\"xaxis3\":{\"anchor\":\"y3\",\"domain\":[0.0,1.0],\"range\":[\"2016-12-13T18:54:02.958904115\",\"2018-01-18T11:04:57.863013581\"],\"tickformat\":\"%B %e\",\"type\":\"date\"},\"yaxis3\":{\"anchor\":\"x3\",\"domain\":[0.0,0.26666666666666666],\"title\":{\"text\":\"yearly\"},\"zerolinecolor\":\"#AAA\"},\"height\":600,\"showlegend\":false,\"width\":900},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('150c75ad-b9ee-47f1-a426-11c27a9b504a');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "forecast['yhat']"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "iW-jCsrtHBWy",
        "outputId": "cf2a5401-e0ad-4fd4-bccb-971b5c2b81a4"
      },
      "execution_count": 264,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0    73.948913\n",
              "1    60.644368\n",
              "2    70.870217\n",
              "3    76.070775\n",
              "4    71.281039\n",
              "5    63.432133\n",
              "6    59.851510\n",
              "7    52.741461\n",
              "8    58.721375\n",
              "9    59.084026\n",
              "Name: yhat, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 264
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Assessing Model Accuracy\n",
        "#training model\n",
        "predictions = past['yhat']\n",
        "print('Traing RMSE: ', rmse(predictions, train['y']))\n",
        "print('Average of Train Data: ', train['y'].mean())\n",
        "print('Training RMSE/AVG: ', rmse(predictions, train['y'])/train['y'].mean())\n",
        "\n",
        "print('')\n",
        "print('*' * 30)\n",
        "print('')\n",
        "\n",
        "#testing model\n",
        "predictions = forecast['yhat']\n",
        "print('Testing RMSE: ', rmse(predictions, test['y']))\n",
        "print('Average of Test Data: ', test['y'].mean())\n",
        "print('Testing RMSE/AVG: ', rmse(predictions, test['y'])/test['y'].mean())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bFtjnKOHKmOh",
        "outputId": "ae73ea8e-e28d-4af3-b359-a3b88c0d2666"
      },
      "execution_count": 265,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Traing RMSE:  14.949012657844786\n",
            "Average of Train Data:  106.04393561074153\n",
            "Training RMSE/AVG:  0.14096999108669966\n",
            "\n",
            "******************************\n",
            "\n",
            "Testing RMSE:  8.62184716218035\n",
            "Average of Test Data:  61.904229566292756\n",
            "Testing RMSE/AVG:  0.13927719030809166\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#compare the results with parameters to the results without parameters\n",
        "m_no_reg = Prophet()\n",
        "m_no_reg.fit(train[['ds', 'y']])\n",
        "\n",
        "#make future df manually, selecting the date\n",
        "past_no_reg = m_no_reg.predict(train[['ds', 'y']])\n",
        "future_no_reg = test[['ds', 'y']]\n",
        "forecast_no_reg = m_no_reg.predict(future_no_reg)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "puHMhIZ6KmSe",
        "outputId": "889c454a-1f2b-4adf-8092-959ef130712d"
      },
      "execution_count": 267,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:prophet:Disabling weekly seasonality. Run prophet with weekly_seasonality=True to override this.\n",
            "INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n",
            "DEBUG:cmdstanpy:input tempfile: /tmp/tmp5v91vrao/spx6hkpr.json\n",
            "DEBUG:cmdstanpy:input tempfile: /tmp/tmp5v91vrao/i_822izz.json\n",
            "DEBUG:cmdstanpy:idx 0\n",
            "DEBUG:cmdstanpy:running CmdStan, num_threads: None\n",
            "DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.8/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=12394', 'data', 'file=/tmp/tmp5v91vrao/spx6hkpr.json', 'init=/tmp/tmp5v91vrao/i_822izz.json', 'output', 'file=/tmp/tmp5v91vrao/prophet_model4os9971i/prophet_model-20221207032344.csv', 'method=optimize', 'algorithm=newton', 'iter=10000']\n",
            "03:23:44 - cmdstanpy - INFO - Chain [1] start processing\n",
            "INFO:cmdstanpy:Chain [1] start processing\n",
            "03:23:44 - cmdstanpy - INFO - Chain [1] done processing\n",
            "INFO:cmdstanpy:Chain [1] done processing\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#training model with no parameters\n",
        "#accuracy of the training model\n",
        "predictions = past_no_reg['yhat']\n",
        "print('Traing RMSE: ', rmse(predictions, train['y']))\n",
        "print('Average of Train Data: ', train['y'].mean())\n",
        "print('Training RMSE/AVG: ', rmse(predictions, train['y'])/train['y'].mean())\n",
        "\n",
        "print('')\n",
        "print('*' * 30)\n",
        "print('')\n",
        "\n",
        "#testing model with no parameters\n",
        "predictions = forecast_no_reg['yhat']\n",
        "print('Testing RMSE: ', rmse(predictions, test['y']))\n",
        "print('Average of Test Data: ', test['y'].mean())\n",
        "print('Testing RMSE/AVG: ', rmse(predictions, test['y'])/test['y'].mean())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Nf5rcGR_K1iQ",
        "outputId": "ae35e252-6bae-4123-ed8a-828e693a42b2"
      },
      "execution_count": 268,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Traing RMSE:  16.196970046702354\n",
            "Average of Train Data:  106.04393561074153\n",
            "Training RMSE/AVG:  0.15273829619222196\n",
            "\n",
            "******************************\n",
            "\n",
            "Testing RMSE:  10.583879001883977\n",
            "Average of Test Data:  61.904229566292756\n",
            "Testing RMSE/AVG:  0.17097182334770492\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Adding in the regressors makes the model better, but not a whole lot."
      ],
      "metadata": {
        "id": "3oJ8Uc2o8IDf"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Forecasting 5 Years Out"
      ],
      "metadata": {
        "id": "b9bSUwQrOF4R"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Imputing with MICE"
      ],
      "metadata": {
        "id": "esMYUCccOmYr"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#add some empty rows to the df for next five years\n",
        "empty = pd.DataFrame({'ppt':[np.nan,np.nan,np.nan,np.nan,np.nan], 'tmin':[np.nan,np.nan,np.nan,np.nan,np.nan], 'tmean':[np.nan,np.nan,np.nan,np.nan,np.nan], 'tmax':[np.nan,np.nan,np.nan,np.nan,np.nan], 'tdewmean':[np.nan,np.nan,np.nan,np.nan,np.nan],\n",
        "                     'vpdmin':[np.nan,np.nan,np.nan,np.nan,np.nan], 'vpdmax':[np.nan,np.nan,np.nan,np.nan,np.nan], 'tdiff' :[np.nan,np.nan,np.nan,np.nan,np.nan], 'tdiff' :[np.nan,np.nan,np.nan,np.nan,np.nan], \n",
        "                     'yield_tree' :[np.nan,np.nan,np.nan,np.nan,np.nan], 'date': ['2022-01', '2023-01', '2024-01', '2025-01', '2026-01']})\n",
        "\n",
        "prism3_future = prism3.append(empty)\n",
        "\n",
        "prism3_future['date'] = pd.to_datetime(prism3_future['date'])"
      ],
      "metadata": {
        "id": "uvRrLvNJOFJJ"
      },
      "execution_count": 269,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#mice imputation\n",
        "X = prism3_future[prism3_future.columns[0:10]]\n",
        "imputer = IterativeImputer()\n",
        "prism3_future[prism3_future.columns[0:10]] = imputer.fit_transform(X)\n",
        "\n",
        "prism2_future = prism3_future.reset_index(drop=True)"
      ],
      "metadata": {
        "id": "0miCQXbHOFQ0"
      },
      "execution_count": 270,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "prism3_future.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "F0uLIDkLO9SV",
        "outputId": "bc0be963-db61-46a0-eb21-ae471b6cd9ed"
      },
      "execution_count": 271,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      ppt       tmin      tmean       tmax   tdewmean    vpdmin     vpdmax  \\\n",
              "0  160.07  35.936667  47.560000  59.190833  31.820000  1.539500  14.790417   \n",
              "1  151.75  37.214167  48.848333  60.475833  31.831667  2.014167  15.471333   \n",
              "2  143.71  37.306667  48.983333  60.665000  32.799167  1.925167  15.160417   \n",
              "3  176.08  36.076667  47.360000  58.643333  32.312500  1.686667  14.011333   \n",
              "4   97.12  36.110833  47.941667  59.785833  32.952500  1.477500  13.763417   \n",
              "\n",
              "     vpddiff      tdiff   vpdmean  yield_tree       date  \n",
              "0  13.250917  23.254167  8.164958  157.833656 1972-01-01  \n",
              "1  13.457167  23.261667  8.742750  179.322328 1973-01-01  \n",
              "2  13.235250  23.358333  8.542792  157.728707 1974-01-01  \n",
              "3  12.324667  22.566667  7.849000  170.974729 1975-01-01  \n",
              "4  12.285917  23.675000  7.620458  160.319574 1976-01-01  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b05adb7e-7544-421f-b894-1a2236acf113\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ppt</th>\n",
              "      <th>tmin</th>\n",
              "      <th>tmean</th>\n",
              "      <th>tmax</th>\n",
              "      <th>tdewmean</th>\n",
              "      <th>vpdmin</th>\n",
              "      <th>vpdmax</th>\n",
              "      <th>vpddiff</th>\n",
              "      <th>tdiff</th>\n",
              "      <th>vpdmean</th>\n",
              "      <th>yield_tree</th>\n",
              "      <th>date</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>160.07</td>\n",
              "      <td>35.936667</td>\n",
              "      <td>47.560000</td>\n",
              "      <td>59.190833</td>\n",
              "      <td>31.820000</td>\n",
              "      <td>1.539500</td>\n",
              "      <td>14.790417</td>\n",
              "      <td>13.250917</td>\n",
              "      <td>23.254167</td>\n",
              "      <td>8.164958</td>\n",
              "      <td>157.833656</td>\n",
              "      <td>1972-01-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>151.75</td>\n",
              "      <td>37.214167</td>\n",
              "      <td>48.848333</td>\n",
              "      <td>60.475833</td>\n",
              "      <td>31.831667</td>\n",
              "      <td>2.014167</td>\n",
              "      <td>15.471333</td>\n",
              "      <td>13.457167</td>\n",
              "      <td>23.261667</td>\n",
              "      <td>8.742750</td>\n",
              "      <td>179.322328</td>\n",
              "      <td>1973-01-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>143.71</td>\n",
              "      <td>37.306667</td>\n",
              "      <td>48.983333</td>\n",
              "      <td>60.665000</td>\n",
              "      <td>32.799167</td>\n",
              "      <td>1.925167</td>\n",
              "      <td>15.160417</td>\n",
              "      <td>13.235250</td>\n",
              "      <td>23.358333</td>\n",
              "      <td>8.542792</td>\n",
              "      <td>157.728707</td>\n",
              "      <td>1974-01-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>176.08</td>\n",
              "      <td>36.076667</td>\n",
              "      <td>47.360000</td>\n",
              "      <td>58.643333</td>\n",
              "      <td>32.312500</td>\n",
              "      <td>1.686667</td>\n",
              "      <td>14.011333</td>\n",
              "      <td>12.324667</td>\n",
              "      <td>22.566667</td>\n",
              "      <td>7.849000</td>\n",
              "      <td>170.974729</td>\n",
              "      <td>1975-01-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>97.12</td>\n",
              "      <td>36.110833</td>\n",
              "      <td>47.941667</td>\n",
              "      <td>59.785833</td>\n",
              "      <td>32.952500</td>\n",
              "      <td>1.477500</td>\n",
              "      <td>13.763417</td>\n",
              "      <td>12.285917</td>\n",
              "      <td>23.675000</td>\n",
              "      <td>7.620458</td>\n",
              "      <td>160.319574</td>\n",
              "      <td>1976-01-01</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b05adb7e-7544-421f-b894-1a2236acf113')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-b05adb7e-7544-421f-b894-1a2236acf113 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-b05adb7e-7544-421f-b894-1a2236acf113');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 271
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "prism3_future.tail()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "zzLbzhwsO0gU",
        "outputId": "17a90e5d-5981-4989-d12e-db975e05dd95"
      },
      "execution_count": 272,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       ppt      tmin      tmean     tmax  tdewmean    vpdmin     vpdmax  \\\n",
              "0  145.493  37.31305  48.604317  59.8972  33.32065  1.612798  14.222528   \n",
              "1  145.493  37.31305  48.604317  59.8972  33.32065  1.612798  14.222528   \n",
              "2  145.493  37.31305  48.604317  59.8972  33.32065  1.612798  14.222528   \n",
              "3  145.493  37.31305  48.604317  59.8972  33.32065  1.612798  14.222528   \n",
              "4  145.493  37.31305  48.604317  59.8972  33.32065  1.612798  14.222528   \n",
              "\n",
              "    vpddiff     tdiff   vpdmean  yield_tree       date  \n",
              "0  12.60973  22.58415  7.917663         NaN 2022-01-01  \n",
              "1  12.60973  22.58415  7.917663         NaN 2023-01-01  \n",
              "2  12.60973  22.58415  7.917663         NaN 2024-01-01  \n",
              "3  12.60973  22.58415  7.917663         NaN 2025-01-01  \n",
              "4  12.60973  22.58415  7.917663         NaN 2026-01-01  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-21c81610-0da7-4de9-8524-0d54bd524ed3\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ppt</th>\n",
              "      <th>tmin</th>\n",
              "      <th>tmean</th>\n",
              "      <th>tmax</th>\n",
              "      <th>tdewmean</th>\n",
              "      <th>vpdmin</th>\n",
              "      <th>vpdmax</th>\n",
              "      <th>vpddiff</th>\n",
              "      <th>tdiff</th>\n",
              "      <th>vpdmean</th>\n",
              "      <th>yield_tree</th>\n",
              "      <th>date</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>145.493</td>\n",
              "      <td>37.31305</td>\n",
              "      <td>48.604317</td>\n",
              "      <td>59.8972</td>\n",
              "      <td>33.32065</td>\n",
              "      <td>1.612798</td>\n",
              "      <td>14.222528</td>\n",
              "      <td>12.60973</td>\n",
              "      <td>22.58415</td>\n",
              "      <td>7.917663</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2022-01-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>145.493</td>\n",
              "      <td>37.31305</td>\n",
              "      <td>48.604317</td>\n",
              "      <td>59.8972</td>\n",
              "      <td>33.32065</td>\n",
              "      <td>1.612798</td>\n",
              "      <td>14.222528</td>\n",
              "      <td>12.60973</td>\n",
              "      <td>22.58415</td>\n",
              "      <td>7.917663</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2023-01-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>145.493</td>\n",
              "      <td>37.31305</td>\n",
              "      <td>48.604317</td>\n",
              "      <td>59.8972</td>\n",
              "      <td>33.32065</td>\n",
              "      <td>1.612798</td>\n",
              "      <td>14.222528</td>\n",
              "      <td>12.60973</td>\n",
              "      <td>22.58415</td>\n",
              "      <td>7.917663</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2024-01-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>145.493</td>\n",
              "      <td>37.31305</td>\n",
              "      <td>48.604317</td>\n",
              "      <td>59.8972</td>\n",
              "      <td>33.32065</td>\n",
              "      <td>1.612798</td>\n",
              "      <td>14.222528</td>\n",
              "      <td>12.60973</td>\n",
              "      <td>22.58415</td>\n",
              "      <td>7.917663</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2025-01-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>145.493</td>\n",
              "      <td>37.31305</td>\n",
              "      <td>48.604317</td>\n",
              "      <td>59.8972</td>\n",
              "      <td>33.32065</td>\n",
              "      <td>1.612798</td>\n",
              "      <td>14.222528</td>\n",
              "      <td>12.60973</td>\n",
              "      <td>22.58415</td>\n",
              "      <td>7.917663</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2026-01-01</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-21c81610-0da7-4de9-8524-0d54bd524ed3')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-21c81610-0da7-4de9-8524-0d54bd524ed3 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-21c81610-0da7-4de9-8524-0d54bd524ed3');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 272
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#make a df p with datetime and yield_acre_lbs\n",
        "p = prism3_future[['date', 'yield_tree']]\n",
        "p.rename(columns={'date':'ds', 'yield_tree': 'y'}, inplace=True)\n",
        "\n",
        "#add predictors\n",
        "best_predictors = list(prism3_future.columns[:10])\n",
        "for predictor in best_predictors:\n",
        "  p[predictor] = prism3_future[predictor]\n",
        "p.apply(lambda x: x.isna().sum())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "g85wcVWFPA5o",
        "outputId": "17adaa7b-b326-4814-f64d-62004b14f13b"
      },
      "execution_count": 273,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.8/dist-packages/pandas/core/frame.py:5039: SettingWithCopyWarning:\n",
            "\n",
            "\n",
            "A value is trying to be set on a copy of a slice from a DataFrame\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "\n",
            "<ipython-input-273-84a97f00049b>:8: SettingWithCopyWarning:\n",
            "\n",
            "\n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "ds          0\n",
              "y           5\n",
              "ppt         0\n",
              "tmin        0\n",
              "tmean       0\n",
              "tmax        0\n",
              "tdewmean    0\n",
              "vpdmin      0\n",
              "vpdmax      0\n",
              "vpddiff     0\n",
              "tdiff       0\n",
              "vpdmean     0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 273
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#split into train and test\n",
        "train = p[:-5]\n",
        "test = p[-5:]"
      ],
      "metadata": {
        "id": "555B3I8qPcLl"
      },
      "execution_count": 274,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(train.shape)\n",
        "print(test.shape)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kzzzskIuQrvE",
        "outputId": "a8b63969-d5e0-486c-bd82-82483fb969d3"
      },
      "execution_count": 275,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(50, 12)\n",
            "(5, 12)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#train the model on the historical data, adding in regressors\n",
        "m = Prophet()\n",
        "for reg in ['tdiff', 'vpdmin', 'ppt', 'vpdmean', 'vpddiff']:\n",
        "  m.add_regressor(reg)\n",
        "m.fit(train)\n",
        "\n",
        "#make future df manually, selecting the date and the regressors from the test data\n",
        "past = m.predict(train)\n",
        "future = test\n",
        "forecast = m.predict(future)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "zTqtkB6qPg1U",
        "outputId": "45bf4e86-59ea-4896-d93c-9ec94315c772"
      },
      "execution_count": 277,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:prophet:Disabling weekly seasonality. Run prophet with weekly_seasonality=True to override this.\n",
            "INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n",
            "DEBUG:cmdstanpy:input tempfile: /tmp/tmp5v91vrao/53d6wkay.json\n",
            "DEBUG:cmdstanpy:input tempfile: /tmp/tmp5v91vrao/y2qr40ks.json\n",
            "DEBUG:cmdstanpy:idx 0\n",
            "DEBUG:cmdstanpy:running CmdStan, num_threads: None\n",
            "DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.8/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=9660', 'data', 'file=/tmp/tmp5v91vrao/53d6wkay.json', 'init=/tmp/tmp5v91vrao/y2qr40ks.json', 'output', 'file=/tmp/tmp5v91vrao/prophet_modelhfl720he/prophet_model-20221207032503.csv', 'method=optimize', 'algorithm=newton', 'iter=10000']\n",
            "03:25:03 - cmdstanpy - INFO - Chain [1] start processing\n",
            "INFO:cmdstanpy:Chain [1] start processing\n",
            "03:25:04 - cmdstanpy - INFO - Chain [1] done processing\n",
            "INFO:cmdstanpy:Chain [1] done processing\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "m.plot(past)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 865
        },
        "id": "oO99x8xkQWjl",
        "outputId": "0b464431-31fe-4303-80fe-36a178b221c2"
      },
      "execution_count": 278,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Figure size 720x432 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {},
          "execution_count": 278
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x432 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "m.plot(forecast)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 865
        },
        "id": "cEAzV3cmQY2E",
        "outputId": "b65eab27-f7a1-40e9-8056-a0fe111b102f"
      },
      "execution_count": 279,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Figure size 720x432 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {},
          "execution_count": 279
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x432 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Assessing Model Accuracy\n",
        "#training model\n",
        "predictions = past['yhat']\n",
        "print('Traing RMSE: ', rmse(predictions, train['y']))\n",
        "print('Average of Train Data: ', train['y'].mean())\n",
        "print('Training RMSE/AVG: ', rmse(predictions, train['y'])/train['y'].mean())\n",
        "\n",
        "print('')\n",
        "print('*' * 30)\n",
        "print('')\n",
        "\n",
        "#Predictions\n",
        "forecast['yhat']"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7lWTl-nRPqSV",
        "outputId": "a2e4daa3-eb1d-4b72-a286-0b9198cc50a3"
      },
      "execution_count": 280,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Traing RMSE:  13.787032257008951\n",
            "Average of Train Data:  97.21599440185177\n",
            "Training RMSE/AVG:  0.14181855919735709\n",
            "\n",
            "******************************\n",
            "\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0    38.393532\n",
              "1    38.717480\n",
              "2    40.373027\n",
              "3    30.486864\n",
              "4    29.476196\n",
              "Name: yhat, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 280
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "forecast"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 386
        },
        "id": "nkBuzoNVREDz",
        "outputId": "55706d9a-a5d9-4927-b908-97cca7620faf"
      },
      "execution_count": 221,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          ds      trend  yhat_lower  yhat_upper  trend_lower  trend_upper  \\\n",
              "0 2022-01-01 -40.712182   20.156545   57.054092   -40.712247   -40.712119   \n",
              "1 2023-01-01 -42.939990   22.097247   56.378726   -42.940205   -42.939772   \n",
              "2 2024-01-01 -45.167798   23.522520   57.659854   -45.168240   -45.167334   \n",
              "3 2025-01-01 -47.401710   12.269637   47.934235   -47.402454   -47.400959   \n",
              "4 2026-01-01 -49.629518   13.782486   46.731238   -49.630585   -49.628430   \n",
              "\n",
              "   additive_terms  additive_terms_lower  additive_terms_upper  \\\n",
              "0       79.105714             79.105714             79.105714   \n",
              "1       81.657470             81.657470             81.657470   \n",
              "2       85.540825             85.540825             85.540825   \n",
              "3       77.888575             77.888575             77.888575   \n",
              "4       79.105714             79.105714             79.105714   \n",
              "\n",
              "   extra_regressors_additive  ...        vpdmin  vpdmin_lower  vpdmin_upper  \\\n",
              "0              -1.583240e-13  ... -2.823046e-14 -2.823046e-14 -2.823046e-14   \n",
              "1              -1.583240e-13  ... -2.823046e-14 -2.823046e-14 -2.823046e-14   \n",
              "2              -1.583240e-13  ... -2.823046e-14 -2.823046e-14 -2.823046e-14   \n",
              "3              -1.583240e-13  ... -2.823046e-14 -2.823046e-14 -2.823046e-14   \n",
              "4              -1.280995e-13  ... -9.410154e-15 -9.410154e-15 -9.410154e-15   \n",
              "\n",
              "      yearly  yearly_lower  yearly_upper  multiplicative_terms  \\\n",
              "0  79.105714     79.105714     79.105714                   0.0   \n",
              "1  81.657470     81.657470     81.657470                   0.0   \n",
              "2  85.540825     85.540825     85.540825                   0.0   \n",
              "3  77.888575     77.888575     77.888575                   0.0   \n",
              "4  79.105714     79.105714     79.105714                   0.0   \n",
              "\n",
              "   multiplicative_terms_lower  multiplicative_terms_upper       yhat  \n",
              "0                         0.0                         0.0  38.393532  \n",
              "1                         0.0                         0.0  38.717480  \n",
              "2                         0.0                         0.0  40.373027  \n",
              "3                         0.0                         0.0  30.486864  \n",
              "4                         0.0                         0.0  29.476196  \n",
              "\n",
              "[5 rows x 34 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a51f917e-9ba8-4893-9a5e-5f4b49c3c839\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ds</th>\n",
              "      <th>trend</th>\n",
              "      <th>yhat_lower</th>\n",
              "      <th>yhat_upper</th>\n",
              "      <th>trend_lower</th>\n",
              "      <th>trend_upper</th>\n",
              "      <th>additive_terms</th>\n",
              "      <th>additive_terms_lower</th>\n",
              "      <th>additive_terms_upper</th>\n",
              "      <th>extra_regressors_additive</th>\n",
              "      <th>...</th>\n",
              "      <th>vpdmin</th>\n",
              "      <th>vpdmin_lower</th>\n",
              "      <th>vpdmin_upper</th>\n",
              "      <th>yearly</th>\n",
              "      <th>yearly_lower</th>\n",
              "      <th>yearly_upper</th>\n",
              "      <th>multiplicative_terms</th>\n",
              "      <th>multiplicative_terms_lower</th>\n",
              "      <th>multiplicative_terms_upper</th>\n",
              "      <th>yhat</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2022-01-01</td>\n",
              "      <td>-40.712182</td>\n",
              "      <td>20.156545</td>\n",
              "      <td>57.054092</td>\n",
              "      <td>-40.712247</td>\n",
              "      <td>-40.712119</td>\n",
              "      <td>79.105714</td>\n",
              "      <td>79.105714</td>\n",
              "      <td>79.105714</td>\n",
              "      <td>-1.583240e-13</td>\n",
              "      <td>...</td>\n",
              "      <td>-2.823046e-14</td>\n",
              "      <td>-2.823046e-14</td>\n",
              "      <td>-2.823046e-14</td>\n",
              "      <td>79.105714</td>\n",
              "      <td>79.105714</td>\n",
              "      <td>79.105714</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>38.393532</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2023-01-01</td>\n",
              "      <td>-42.939990</td>\n",
              "      <td>22.097247</td>\n",
              "      <td>56.378726</td>\n",
              "      <td>-42.940205</td>\n",
              "      <td>-42.939772</td>\n",
              "      <td>81.657470</td>\n",
              "      <td>81.657470</td>\n",
              "      <td>81.657470</td>\n",
              "      <td>-1.583240e-13</td>\n",
              "      <td>...</td>\n",
              "      <td>-2.823046e-14</td>\n",
              "      <td>-2.823046e-14</td>\n",
              "      <td>-2.823046e-14</td>\n",
              "      <td>81.657470</td>\n",
              "      <td>81.657470</td>\n",
              "      <td>81.657470</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>38.717480</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2024-01-01</td>\n",
              "      <td>-45.167798</td>\n",
              "      <td>23.522520</td>\n",
              "      <td>57.659854</td>\n",
              "      <td>-45.168240</td>\n",
              "      <td>-45.167334</td>\n",
              "      <td>85.540825</td>\n",
              "      <td>85.540825</td>\n",
              "      <td>85.540825</td>\n",
              "      <td>-1.583240e-13</td>\n",
              "      <td>...</td>\n",
              "      <td>-2.823046e-14</td>\n",
              "      <td>-2.823046e-14</td>\n",
              "      <td>-2.823046e-14</td>\n",
              "      <td>85.540825</td>\n",
              "      <td>85.540825</td>\n",
              "      <td>85.540825</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>40.373027</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2025-01-01</td>\n",
              "      <td>-47.401710</td>\n",
              "      <td>12.269637</td>\n",
              "      <td>47.934235</td>\n",
              "      <td>-47.402454</td>\n",
              "      <td>-47.400959</td>\n",
              "      <td>77.888575</td>\n",
              "      <td>77.888575</td>\n",
              "      <td>77.888575</td>\n",
              "      <td>-1.583240e-13</td>\n",
              "      <td>...</td>\n",
              "      <td>-2.823046e-14</td>\n",
              "      <td>-2.823046e-14</td>\n",
              "      <td>-2.823046e-14</td>\n",
              "      <td>77.888575</td>\n",
              "      <td>77.888575</td>\n",
              "      <td>77.888575</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>30.486864</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2026-01-01</td>\n",
              "      <td>-49.629518</td>\n",
              "      <td>13.782486</td>\n",
              "      <td>46.731238</td>\n",
              "      <td>-49.630585</td>\n",
              "      <td>-49.628430</td>\n",
              "      <td>79.105714</td>\n",
              "      <td>79.105714</td>\n",
              "      <td>79.105714</td>\n",
              "      <td>-1.280995e-13</td>\n",
              "      <td>...</td>\n",
              "      <td>-9.410154e-15</td>\n",
              "      <td>-9.410154e-15</td>\n",
              "      <td>-9.410154e-15</td>\n",
              "      <td>79.105714</td>\n",
              "      <td>79.105714</td>\n",
              "      <td>79.105714</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>29.476196</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 34 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a51f917e-9ba8-4893-9a5e-5f4b49c3c839')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-a51f917e-9ba8-4893-9a5e-5f4b49c3c839 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-a51f917e-9ba8-4893-9a5e-5f4b49c3c839');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 221
        }
      ]
    }
  ]
}
